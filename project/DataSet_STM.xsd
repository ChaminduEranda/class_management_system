<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet_STM" targetNamespace="http://tempuri.org/DataSet_STM.xsd" xmlns:mstns="http://tempuri.org/DataSet_STM.xsd" xmlns="http://tempuri.org/DataSet_STM.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="classConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="classConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.project.Properties.Settings.GlobalReference.Default.classConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="student_examTableAdapter" GeneratorDataComponentClassName="student_examTableAdapter" Name="student_exam" UserDataComponentName="student_examTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="classConnectionString1 (Settings)" DbObjectName="class.dbo.student_exam" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student_exam] WHERE (([student_id] = @Original_student_id) AND ([exam_id] = @Original_exam_id) AND ((@IsNull_exam_marks = 1 AND [exam_marks] IS NULL) OR ([exam_marks] = @Original_exam_marks)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_exam_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_exam_marks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_marks" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_exam_marks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_marks" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student_exam] ([student_id], [exam_id], [exam_marks]) VALUES (@student_id, @exam_id, @exam_marks);
SELECT student_id, exam_id, exam_marks FROM student_exam WHERE (exam_id = @exam_id) AND (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@exam_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@exam_marks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_marks" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT student_id, exam_id, exam_marks FROM dbo.student_exam WHERE exam_id=@a  
AND exam_marks&gt;=@b</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="a" ColumnName="exam_id" DataSourceName="class.dbo.student_exam" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@a" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="exam_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="b" ColumnName="exam_marks" DataSourceName="class.dbo.student_exam" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@b" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="exam_marks" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student_exam] SET [student_id] = @student_id, [exam_id] = @exam_id, [exam_marks] = @exam_marks WHERE (([student_id] = @Original_student_id) AND ([exam_id] = @Original_exam_id) AND ((@IsNull_exam_marks = 1 AND [exam_marks] IS NULL) OR ([exam_marks] = @Original_exam_marks)));
SELECT student_id, exam_id, exam_marks FROM student_exam WHERE (exam_id = @exam_id) AND (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@exam_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@exam_marks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_marks" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_exam_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_exam_marks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_marks" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_exam_marks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="exam_marks" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="student_id" DataSetColumn="student_id" />
              <Mapping SourceColumn="exam_id" DataSetColumn="exam_id" />
              <Mapping SourceColumn="exam_marks" DataSetColumn="exam_marks" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet_STM" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet_STM" msprop:Generator_UserDSName="DataSet_STM">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="student_exam" msprop:Generator_TableClassName="student_examDataTable" msprop:Generator_TableVarName="tablestudent_exam" msprop:Generator_TablePropName="student_exam" msprop:Generator_RowDeletingName="student_examRowDeleting" msprop:Generator_RowChangingName="student_examRowChanging" msprop:Generator_RowEvHandlerName="student_examRowChangeEventHandler" msprop:Generator_RowDeletedName="student_examRowDeleted" msprop:Generator_UserTableName="student_exam" msprop:Generator_RowChangedName="student_examRowChanged" msprop:Generator_RowEvArgName="student_examRowChangeEvent" msprop:Generator_RowClassName="student_examRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="student_id" msprop:Generator_ColumnVarNameInTable="columnstudent_id" msprop:Generator_ColumnPropNameInRow="student_id" msprop:Generator_ColumnPropNameInTable="student_idColumn" msprop:Generator_UserColumnName="student_id" type="xs:int" />
              <xs:element name="exam_id" msprop:Generator_ColumnVarNameInTable="columnexam_id" msprop:Generator_ColumnPropNameInRow="exam_id" msprop:Generator_ColumnPropNameInTable="exam_idColumn" msprop:Generator_UserColumnName="exam_id" type="xs:int" />
              <xs:element name="exam_marks" msprop:Generator_ColumnVarNameInTable="columnexam_marks" msprop:Generator_ColumnPropNameInRow="exam_marks" msprop:Generator_ColumnPropNameInTable="exam_marksColumn" msprop:Generator_UserColumnName="exam_marks" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student_exam" />
      <xs:field xpath="mstns:student_id" />
      <xs:field xpath="mstns:exam_id" />
    </xs:unique>
  </xs:element>
</xs:schema>